package soda.lib

class DayOfTheWeek
  extends
    EnumConstant

  abstract
    ordinal: Int
    name: String

end

class DayOfTheWeek_ (ordinal: Int, name: String)
  extends
    DayOfTheWeek

end

class DayOfTheWeekConstant

  sunday = DayOfTheWeek_ (0, "Sunday")

  monday = DayOfTheWeek_ (1, "Monday")

  tuesday = DayOfTheWeek_ (2, "Tuesday")

  wednesday = DayOfTheWeek_ (3, "Wednesday")

  thursday = DayOfTheWeek_ (4, "Thursday")

  friday = DayOfTheWeek_ (5, "Friday")

  saturday = DayOfTheWeek_ (6, "Saturday")

  DayOfTheWeek_values = Seq (sunday, monday, tuesday, wednesday, thursday, friday, saturday)

end

class DayOfTheWeekEnum
  extends
    DayOfTheWeekConstant

  values = DayOfTheWeek_values

end

class DayOfTheWeekEnum_ ()
  extends
    DayOfTheWeekEnum

end

class EnumSpec ()
  extends
    org.scalatest.funsuite.AnyFunSuite

  test ("the names of the elements in enumerations")
    let
      expected = Seq ("DayOfTheWeek_(0,Sunday)", "DayOfTheWeek_(1,Monday)", "DayOfTheWeek_(2,Tuesday)", "DayOfTheWeek_(3,Wednesday)", "DayOfTheWeek_(4,Thursday)", "DayOfTheWeek_(5,Friday)", "DayOfTheWeek_(6,Saturday)")
      obtained = DayOfTheWeekEnum_ ().values.map (x -> x.toString)
    in assert (obtained == expected)

end

