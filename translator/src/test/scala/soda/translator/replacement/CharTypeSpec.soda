package soda.translator.replacement


* CharTypeSpec() extends org.scalatest.funsuite.AnyFunSuite = {

   test("should recognize quotation marks") {
     input = '"'
     obtained = CharTypeEnumImpl().get_char_type(input)
     expected = CharTypeEnumImpl().QuotesType

     assert(obtained == expected)
   }

   test("should recognize apostrophes") {
     input = '\''
     obtained = CharTypeEnumImpl().get_char_type(input)
     expected = CharTypeEnumImpl().ApostropheType

     assert(obtained == expected)
   }

   test("should recognize backslash") {
     input = '\\'
     obtained = CharTypeEnumImpl().get_char_type(input)
     expected = CharTypeEnumImpl().BackslashType

     assert(obtained == expected)
   }

   test("should recognize a simple char") {
     input = 'a'
     obtained = CharTypeEnumImpl().get_char_type(input)
     expected = CharTypeEnumImpl().PlainType

     assert(obtained == expected)
   }

   test("should recognize plain text") {
     inputStr = "This is plain text with symbols. 0123456789 _ . !?"
     expected = Seq( CharTypeEnumImpl().PlainType )
     obtained =
       inputStr
         .map(ch -> CharTypeEnumImpl().get_char_type(ch))
         .toSet
         .toSeq

     assert(obtained == expected)
   }
}

