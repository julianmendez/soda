package soda.translator.example


* SortExampleSpec() extends org.scalatest.funsuite.AnyFunSuite = {

  test("test sorted sequence with at") {
    sorted_sequence = Seq(1, 3, 5, 5, 8, 9)
    expected = true
    obtained = SortExampleNaive_().is_sorted_with_at(sorted_sequence)

    assert(obtained == expected)
  }

  test("test unsorted sequence with at") {
    sorted_sequence = Seq(1, 3, 5, 4, 8, 9)
    expected = false
    obtained = SortExampleNaive_().is_sorted_with_at(sorted_sequence)

    assert(obtained == expected)
  }
  test("test sorted sequence with zip") {
    sorted_sequence = Seq(1, 3, 5, 5, 8, 9)
    expected = true
    obtained = SortExampleNaive_().is_sorted_with_zip(sorted_sequence)

    assert(obtained == expected)
  }

  test("test unsorted sequence with zip") {
    sorted_sequence = Seq(1, 3, 5, 4, 8, 9)
    expected = false
    obtained = SortExampleNaive_().is_sorted_with_zip(sorted_sequence)

    assert(obtained == expected)
  }
}

