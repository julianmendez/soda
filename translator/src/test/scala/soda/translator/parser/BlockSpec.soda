
class BlockSpec ()
  extends
    org.scalatest.funsuite.AnyFunSuite

  import
    soda.translator.block.AnnotatedLine_

  check [A : Type] (obtained : A) (expected : A) : org.scalatest.compatible.Assertion =
    assert (obtained == expected)

  _mk_AnnotatedLine (line : String) (is_comment : Boolean) : AnnotatedLine_ =
    AnnotatedLine_ (line) (is_comment)

  input = ("\n" +
    "\n/** This is an example */" +
    "\n* Example () {" +
    "\n  /* This is a comment */" +
    "\n  a = \"/** this is not a comment */\"" +
    "\n}" +
    "\n")
    .split ("\n")
    .toSeq

  /* This is to test how to find commented text. */
  test ("should find commented text") (
    check (
      obtained := BlockBuilder_ () .build (input) .annotated_lines
    ) (
      expected := Seq (
        _mk_AnnotatedLine ("") (is_comment := false) ,
        _mk_AnnotatedLine ("") (is_comment := false) ,
        _mk_AnnotatedLine ("/** This is an example */") (is_comment := true) ,
        _mk_AnnotatedLine ("* Example () {") (is_comment := false) ,
        _mk_AnnotatedLine ("  /* This is a comment */") (is_comment := true) ,
        _mk_AnnotatedLine ("  a = \"/** this is not a comment */\"") (is_comment := false) ,
        _mk_AnnotatedLine ("}") (is_comment := false)
      )
    )
  )

end

