package soda.translator.language

+ org.scalatest.funsuite.AnyFunSuite


* UpperBoundDeclarationSpec() extends AnyFunSuite {

  test("should translate a single upper bound") {
    original = "  * BlackBox() extends AbstractBlackBox[A extends AbstractInput]\n"

    expected = "  case class BlackBox (  ) extends AbstractBlackBox [ A <: AbstractInput ]\n"

    obtained = MicroTranslator().translate_program(original)
    assert(obtained == expected)
  }


  test("should translate multiple upper bounds") {
    original = "  * BlackBox() extends AbstractBlackBox[A extends AbstractInput] with AbstractDevice[B extends AbstractDeviceInput]\n"

    expected = "  case class BlackBox (  ) extends AbstractBlackBox [ A <: AbstractInput ] with AbstractDevice [ B <: AbstractDeviceInput ]\n"

    obtained = MicroTranslator().translate_program(original)
    assert(obtained == expected)
  }

}
