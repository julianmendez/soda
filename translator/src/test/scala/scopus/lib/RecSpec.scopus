package scopus.lib

+ org.scalatest.funsuite.AnyFunSuite


* RecSpec() extends AnyFunSuite {

  exampleSeq: Seq[Int] = Seq(0, 1, 1, 2, 3, 5, 8)

  test("foldLeftWhile with Seq") {
    initial_value = Seq()

    next_value: (Seq[String], Int) -> Seq[String] = (s: Seq[String], e: Int) -> s.+:("" + (e + 100))

    condition: (Seq[String], Int) -> Boolean = (s: Seq[String], e: Int) -> e < 5

    expected = Seq("103", "102", "101", "101", "100")
    obtained = Rec().foldLeftWhile(exampleSeq, initial_value, next_value, condition)
    assert(obtained == expected)
  }

  test("foldLeft with Seq") {
    initial_value = Seq()

    next_value: (Seq[String], Int) -> Seq[String] = (s: Seq[String], e: Int) -> s.+:("" + (e + 100))

    expected = Seq("108", "105", "103", "102", "101", "101", "100")
    obtained = Rec().foldLeft(exampleSeq, initial_value, next_value)
    assert(obtained == expected)
  }

}

