package scopus.translator.example


* AbstractFactorialConcise {
  has factorial (n: Int): Int
}

* FactorialConcise () extends AbstractFactorialConcise {

  factorial (n: Int) = __factorial_rec (n, 1)

  @tailrec
  @private
  __factorial_rec (n: Int, product: Int): Int =
    if n == 0
    then product
    else __factorial_rec (n - 1, n * product)

}
