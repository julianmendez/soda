package scopus.translator.example


* Abstract_factorial_concise {
  has factorial (n: Int): Int
}

* Factorial_concise () extends Abstract_factorial_concise {

  factorial (n: Int) = factorial_rec (n, 1)

  @tailrec
  @private
  factorial_rec (n: Int, product: Int): Int =
    if n == 0
    then product
    else factorial_rec (n - 1, n * product)

}

