package soda.translator.example


* AbstractFactorialConcise = {

  has get_factorial (n: Int): Int
}

* FactorialConcise extends AbstractFactorialConcise = {

  get_factorial (n: Int) =
    let
      result = rec (n, 1)

      @tailrec
      rec (n: Int, product: Int): Int =
        if n == 0
        then product
        else rec (n - 1, n * product)

    in result
}

* FactorialConciseImpl () extends FactorialConcise

