package soda.translator.example

* InANutshell() = {

  f(x: Int): Int = x + 16
  b = f(a)
  a = 1 + 2 + 4 + 8

  h0(x: Int, y: Int): Int = {
    a = x + y
    b = x - y

    a * b
  }

  h1(x: Int, y: Int): Int = {
    result = a * b

    a = x + y
    b = x - y

    result
  }

  geater_than(a: Int, b: Int): Boolean =
    a > b

  max(a: Int, b: Int): Int =
    if a > b
    then a
    else b

  class MaxAndMin = {
    max(a: Int, b: Int): Int =
      if a > b
      then a
      else b

    min(a: Int, b: Int): Int =
      if a < b
      then a
      else b
  }

  class ConcreteMaxAndMin() extends MaxAndMin

  class MinMaxPair(min: Int, max: Int)

  class Example(index: Int) = {
    min_max(a: Int, b: Int): MinMaxPair =
      MinMaxPair(
        min := ConcreteMaxAndMin().min(a, b),
        max := ConcreteMaxAndMin().max(a, b)
      )
  }

  class Comparable = {
    has is_greater_than(x: Comparable): Boolean
  }

  class ComparableMax[T subtype Comparable]() = {
    max(a: T, b: T): T =
      if a.is_greater_than(b)
      then a
      else b
  }

  class MyClass (instance_parameter: Int) = {
    class_constant: Int = 1

    another_function (x: Int): Int = 2 * x

    class InnerClass() = {
      main_function (function_parameter: Int): Int =
        another_function(instance_parameter + class_constant + function_parameter)
    }
  }

  class TimeOfToday() {
    import java.util.Date

    get_time: Date = @new Date()
  }

  class Main() = {
    main (args: Array[String]) =
      println("Hello world!")
  }

  class PersonName (name: String) = {
    @override
    toString = name
  }
}

