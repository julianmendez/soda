package soda.example.algorithms

class FizzBuzz

  fizz = "Fizz"

  buzz = "Buzz"

  _range = soda.lib.Range_ ()

  apply : Seq [String] =
    _range.apply (100)
      .map ( lambda (x : Int) --> x + 1)
      .map (_get_fizz_buzz_term)

  _get_fizz_buzz_term (n : Int) : String =
    if _is_divisible_by (n) (15) then fizz + buzz
    else if _is_divisible_by (n) (3) then fizz
    else if _is_divisible_by (n) (5) then buzz
    else n.toString

  _is_divisible_by (n : Int) (k : Int) : Boolean =
    n % k == 0

end
