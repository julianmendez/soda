Soda - Symbolic Objective Descriptive Analysis

Copyright 2020--2023 Julian Alfredo Mendez

https://github.com/julianmendez/soda

Soda is an object-oriented purely-functional language for descriptions.

Usage:

  soda EXTENSION [PARAMETERS...]

where EXTENSION can be:

  scala       call the Soda-to-Scala translator

  coq         call the Soda-to-Coq translator  (only for snippets)

  doc         create LaTeX documents based on Soda files

  manual      output the manual, which is written in Soda

  license     output the license

  help        show this help

  .           call the Soda-to-Scala translator

---
Soda-to-Scala translator

Usage:
  soda scala [OPTION] SODA_SCALA_INPUT
or
  soda scala SODA_INPUT SCALA_OUTPUT

where

  SODA_SCALA_INPUT is used to create the Soda input file and Scala output file.
If it is a directory, it scans recursively the directory to translate Soda files.
If the extension is .soda, the output file has extension .scala .
In the default configuration, the translator visits each Soda package, and for each package,
translates all Soda source files into a single Package.scala file.

  SODA_INPUT is the Soda input file, regardless of the extension

  SCALA_OUTPUT is the Scala output file, regardless of the extension


OPTION:

  -s, --single
    translate every single Soda input file to its corresponding Scala output file


---
Soda-to-Coq translator

Usage:
  soda coq SODA_COQ_INPUT
or
  soda coq SODA_INPUT COQ_OUTPUT

where

  SODA_COQ_INPUT is used for the Soda input file and Coq output file.
If it is a directory, it scans recursively the directory to translate Soda files.
If the extension is .soda, the output file has extension .v .


  SODA_INPUT is the input file containing Soda snippets

  COQ_OUTPUT is the output file for Coq snippets


