/*
 * This file is automatically generated. Do not edit.
 */

package soda.lib

/**
 * This is a Seq implemented without exceptions.
 */
* SeqSD[T] {

  has open[B](ifEmpty: B, ifNonEmpty: NESeqSD[T] -> B): B

  has seq: Seq[T]

  @override
  toString: String = seq.toString

}

* ESeqSD[T]() extends SeqSD[T] {

  open[B](ifEmpty: B, ifNonEmpty: NESeqSD[T] -> B): B = ifEmpty

  seq: Seq[T] = Seq[T]()

}

* NESeqSD[T](head: T, tailSeq: Seq[T]) extends SeqSD[T] {

  open[B](ifEmpty: B, ifNonEmpty: NESeqSD[T] -> B): B = ifNonEmpty(this)

  seq: Seq[T] = tailSeq.+:(head)

}

* SeqSDBuilder[T]() {

  build(seq: Seq[T]): SeqSD[T] =
    if seq.isEmpty
    then ESeqSD[T]()
    else NESeqSD[T](seq.head, seq.tail)

}

