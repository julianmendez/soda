
class BlockTranslatorPipeline
  extends
    BlockTranslator

  import
    soda.lib.Fold_

  abstract
    pipeline : Seq [BlockTranslator]

  _fold = Fold_ ()

  _next_value (block : AnnotatedBlock) (translator : BlockTranslator) : AnnotatedBlock =
    translator .translate (block)

  translate : AnnotatedBlock -> AnnotatedBlock =
    lambda block -->
      _fold .apply [BlockTranslator] [AnnotatedBlock] (pipeline) (block) (_next_value)

end

