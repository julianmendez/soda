package soda.translator.extension.tocoq

/**
 * This translates Soda source code to Coq source code.
 */
* TranslatorToCoq
  extends soda.translator.extension.common.Extension = {

  + soda.translator.parser.BlockProcessor_
  + soda.translator.io.DirectoryProcessor_
  + soda.translator.io.SimpleFileReader_
  + soda.translator.io.SimpleFileWriter_
  + java.io.File

  soda_extension: String = ".soda"

  coq_extension: String = ".v"

  default_argument = "."

  execute (arguments: Seq [String]): Boolean =
    if arguments.length == 0 then process_directory (default_argument)
    else if arguments.length == 1 then process_directory (arguments (0))
    else if arguments.length == 2 then translate (arguments (0), arguments (1))
    else false

  process_directory (start: String): Boolean =
    DirectoryProcessor_ (start, process_soda_file).process ()

  process_soda_file (file: File): Boolean =
    process_soda_file_with (get_input_output_file_names (file.getAbsolutePath) )

  process_soda_file_with (pair: FileNamePair): Boolean =
    translate (pair.input_file_name, pair.output_file_name)

  get_input_output_file_names (input_name: String): FileNamePair =
    if input_name.endsWith (soda_extension)
    then FileNamePair_ (input_name,
      input_name.substring (0, input_name.length - soda_extension.length) + coq_extension)
    else FileNamePair_ (input_name + soda_extension, input_name + coq_extension)

  translate (input_file_name: String, output_file_name: String): Boolean =
    translate_with_input (
      SimpleFileReader_ ().read_file (input_file_name),
      output_file_name
    )

  translate_with_input (input: String, output_file_name: String): Boolean =
    SimpleFileWriter_ ().write_file (
      output_file_name,
      content := BlockProcessor_ (MicroTranslatorToCoq_ () ).translate (input)
    )

}

* TranslatorToCoq_ ()
  extends TranslatorToCoq

* FileNamePair = {

  has input_file_name: String

  has output_file_name: String

}

* FileNamePair_ (input_file_name: String, output_file_name: String)
  extends FileNamePair

