
/**
 * This class translates Soda source code into Scala source code.
 */

class MicroTranslatorToScala
  extends
    soda.translator.block.BlockTranslator

  import
    soda.translator.block.AnnotatedBlock
    soda.translator.block.BlockTranslatorPipeline_
    soda.translator.block.BlockAnnotationEnum_
    soda.translator.block.ConditionalBlockTranslator_
    soda.translator.blocktr.TokenReplacement_

  _tc = TranslationConstantToScala_ ()

  _ba = BlockAnnotationEnum_ ()

  _functions_and_tests =
    Seq (_ba .function_definition , _ba .class_alias , _ba .test_declaration)

  _class_declarations =
    Seq (_ba .class_alias , _ba .class_beginning , _ba .abstract_declaration)

  _definitions_and_declarations =
    _functions_and_tests .++ (_class_declarations)

  _translation_pipeline =
    BlockTranslatorPipeline_ (
      Seq (
        ScalaTypeParameterBlockTranslator_ () ,
        ScalaClassConstructorParameterBlockTranslator_ () ,
        ScalaMatchCaseBlockTranslator_ () ,
        ConditionalBlockTranslator_ (_definitions_and_declarations ,
          TokenReplacement_ () .replace_words (_tc .scala_non_soda) ) ,
        ConditionalBlockTranslator_ (_functions_and_tests ,
          ScalaFunctionDefinitionBlockTranslator_ () ) ,
        ConditionalBlockTranslator_ (_class_declarations ,
          TokenReplacement_ () .replace_words (_tc .type_symbol_translation) ) ,
        ConditionalBlockTranslator_ (_functions_and_tests ,
          TokenReplacement_ () .replace_words (_tc .all_translations) ) ,
        ScalaClassDeclarationBlockTranslator_ () ,
        ScalaImportDeclarationBlockTranslator_ () ,
        ScalaAbstractDeclarationBlockTranslator_ () ,
        ScalaTheoremBlockTranslator_ () ,
        ScalaDirectiveBlockTranslator_ () ,
        ScalaClassEndBlockTranslator_ () ,
        ScalaMainClassBlockTranslator_ () ,
        ScalaClassConstructorBlockTranslator_ ()
      )
    )

  translate : AnnotatedBlock -> AnnotatedBlock =
    lambda block -->
      _translation_pipeline .translate (block)

end

