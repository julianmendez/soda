
class ClassEndBlockTranslator
  extends
    soda.translator.block.BlockTranslator

  import
    soda.translator.block.AnnotatedBlock
    soda.translator.parser.BlockBuilder_
    soda.translator.parser.annotation.ClassEndAnnotation
    soda.translator.parser.annotation.ClassEndAnnotation_

  _tc = TranslationConstantToScala_ ()

  _get_first_line (block : AnnotatedBlock) : String =
    block .lines .headOption .getOrElse ("")

  _get_initial_spaces_with (line : String) : String =
    line .takeWhile (lambda ch --> ch .isSpaceChar)

  _get_initial_spaces (block : ClassEndAnnotation) : String =
    _get_initial_spaces_with (_get_first_line (block) )

  _get_translation (block : ClassEndAnnotation) : String =
    _get_initial_spaces (block) + _tc .scala_class_end_symbol

  _translate_block (block : ClassEndAnnotation) : ClassEndAnnotation =
    ClassEndAnnotation_ (
      BlockBuilder_ () .build (
        Seq [String] (
          _get_translation (block)
        )
      ),
      block .references
    )

  translate_for (annotated_block : AnnotatedBlock) : AnnotatedBlock =
    match annotated_block
      case ClassEndAnnotation_ (block , references) ==>
        _translate_block (ClassEndAnnotation_ (block , references) )
      case otherwise ==> annotated_block

  translate : AnnotatedBlock -> AnnotatedBlock =
    lambda block -->
      translate_for (block)

end

