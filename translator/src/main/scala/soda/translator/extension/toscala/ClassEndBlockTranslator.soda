package soda.translator.extension.toscala

class ClassEndBlockTranslator
  extends
    soda.translator.block.BlockTranslator

  import
    soda.translator.block.AnnotatedBlock
    soda.translator.block.BlockAnnotationEnum_
    soda.translator.parser.BlockBuilder_
    soda.translator.parser.annotation.ClassEndAnnotation

  tc = TranslationConstantToScala_ ()

  _labels = BlockAnnotationEnum_ ()

  translate: AnnotatedBlock -> AnnotatedBlock =
    lambda block ->
      translate_for (block)

  translate_for (annotated_block: AnnotatedBlock): AnnotatedBlock =
    match annotated_block
      | block: ClassEndAnnotation => _translate_block (block)
      | x => annotated_block
    end

  _translate_block (block: ClassEndAnnotation): AnnotatedBlock =
    if is_class_end (block)
    then BlockBuilder_ ().build ( Seq [String] (tc.scala_class_end_symbol), block.block_annotation)
    else block

  get_first_line_trimmed (block: AnnotatedBlock): String =
    block.lines.headOption.getOrElse ("").trim

  is_class_end (block: AnnotatedBlock): Boolean =
    _is_class_end_with (get_first_line_trimmed (block) )

  _is_class_end_with (line: String): Boolean =
    line == tc.class_end_reserved_word or
    line == tc.class_end_symbol

end

class ClassEndBlockTranslator_ ()
  extends
    ClassEndBlockTranslator

end
