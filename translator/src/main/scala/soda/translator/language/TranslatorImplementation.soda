package soda.translator.language

* Translator extends soda.translator.replacement.Translator

* SynonymAtBeginning () extends Translator = {

  _table = Translation().SynonymAtBeginning

  keys = _keys(_table)

  translate(word: String): String = _get(_table, word)
}

* TranslationAtBeginningWithParen() extends Translator = {

  _table = Translation().TranslationAtBeginningWithParen

  keys = _keys(_table)

  translate(word: String): String = _get(_table, word)
}

* TranslationAtBeginningWithoutParen() extends Translator = {

  _table = Translation().TranslationAtBeginningWithoutParen

  keys = _keys(_table)

  translate(word: String): String = _get(_table, word)
}

* Synonym() extends Translator = {

  _table = Translation().Synonym

  keys = _keys(_table)

  translate(word: String): String = _get(_table, word)
}

* MainTranslation() extends Translator = {

  _table = Translation().MainTranslation

  keys = _keys(_table)

  translate(word: String): String = _get(_table, word)
}

* ScalaNonSoda() extends Translator = {

  _table = Translation().ScalaNonSoda

  keys = _keys(_table)

  translate(word: String): String = _get(_table, word)
}

* Beautifier() extends Translator = {

  _table = Translation().Beautifier

  keys = _keys(_table)

  translate(word: String): String = _get(_table, word)
}

