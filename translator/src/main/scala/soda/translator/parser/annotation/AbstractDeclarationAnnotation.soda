
class AbstractDeclarationAnnotation
  extends
    BlockAnnotationParser

  abstract
    block : soda.translator.block.Block
    references : Seq [soda.translator.block.AnnotatedBlock]

  import
    soda.translator.block.AnnotatedLine
    soda.translator.block.BlockAnnotationEnum
    soda.translator.parser.SodaConstant

  identifier = BlockAnnotationEnum .mk .abstract_declaration

  applies : Boolean =
    block .readable_lines .nonEmpty and
    (block .readable_lines .head .line .trim == SodaConstant .mk .abstract_reserved_word)

  abstract_functions_with_comments : Seq [AnnotatedLine] =
    content_lines

  abstract_functions : Seq [AnnotatedLine] =
    abstract_functions_with_comments
      .filter (lambda line --> not line .is_comment)

end

