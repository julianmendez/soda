package soda.translator.parser.annotation

class ClassBeginningAnnotation
  extends
    BlockAnnotationParser

  abstract
    block: soda.translator.block.Block

  import
    soda.translator.block.BlockAnnotationEnum_
    soda.translator.parser.SodaConstant_

  identifier = BlockAnnotationEnum_ ().class_beginning

  sc = SodaConstant_ ()

  applies: Boolean =
    (starts_with_prefix_and_space (sc.class_reserved_word) or
      starts_with_prefix_and_space (sc.class_abbreviation) ) and
    not contains_the_equals_symbol

  contains_the_equals_symbol: Boolean =
    FunctionDefinitionAnnotation_ (block).contains_the_equals_symbol

  _get_class_name_and_type_parameters: String =
    skip_first_word (first_readable_line.line)

  class_name: String =
    get_first_word (_get_class_name_and_type_parameters)

  type_parameters: String =
    skip_first_word (_get_class_name_and_type_parameters)

end

class ClassBeginningAnnotation_ (block: soda.translator.block.Block)
  extends
    ClassBeginningAnnotation

end
