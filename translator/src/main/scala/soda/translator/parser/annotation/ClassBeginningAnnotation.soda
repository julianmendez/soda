package soda.translator.parser.annotation

class ClassBeginningAnnotation
  extends
    BlockAnnotationParser

  abstract
    block: soda.translator.block.Block

  import
    soda.translator.block.BlockAnnotation
    soda.translator.block.BlockAnnotationEnum_
    soda.translator.parser.SodaConstant_

  identifier = BlockAnnotationEnum_ ().class_beginning

  sc = SodaConstant_ ()

  applies: Boolean =
    (starts_with_prefix_and_space (sc.class_reserved_word) or
      starts_with_prefix_and_space (sc.class_abbreviation) ) and
    (ends_with_space_and_suffix (sc.class_begin_symbol) or
      ends_with_space_and_suffix (sc.class_definition_symbol) or
      ends_with_space_and_suffix (sc.class_definition_synonym) )

  class_name: String =
    skip_first_word (first_readable_line.line)

end

class ClassBeginningAnnotation_ (block: soda.translator.block.Block)
  extends
    ClassBeginningAnnotation

end
