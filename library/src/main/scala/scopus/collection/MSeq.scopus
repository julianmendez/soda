package scopus.collection


* MSeq[T] {
  has isEmpty: Boolean
  has _head(): Option[T]
  has _tail(): Option[MSeq[T]]

  head() = _head().get

  tail() = _tail().get
}


* ESeq[T] ()
  extends MSeq[T] {

  isEmpty = true

  _head() = Option.empty

  _tail() = Option.empty

}


* NESeq[T] (head0: T, tail0: MSeq[T])
  extends MSeq[T] {

  isEmpty = false

  _head() = Some(head0)

  _tail() = Some(tail0)

}


