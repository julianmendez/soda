package soda.collection


* OptionSD[T] {
  has isEmpty: Boolean

  has open[B](ifEmpty: B, ifNonEmpty: SomeSD[T] -> B): B

}


* NoneSD[T] () extends OptionSD[T] {

  isEmpty = true

  open[B](ifEmpty: B, ifNonEmpty: SomeSD[T] -> B): B = ifEmpty

}


* SomeSD[T] (element: T) extends OptionSD[T] {

  isEmpty = false

  open[B](ifEmpty: B, ifNonEmpty: SomeSD[T] -> B): B = ifNonEmpty(this)

  get: T = element

}

