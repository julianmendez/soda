
class SaladIngredient
  extends
    soda.lib.EnumConstant

  abstract
    ordinal : Int
    name : String

end

class SaladIngredientConstant

  tomato = SaladIngredient_ (1 , "tomato")

  lettuce = SaladIngredient_ (2 , "lettuce")

  sunflower_seeds = SaladIngredient_ (3 , "sunflower seeds")

  olive_oil = SaladIngredient_ (4 , "olive_oil")

  SaladIngredient_values = Seq (tomato , lettuce , sunflower_seeds , olive_oil)

end

class SaladMakerSpec ()
  extends
    org.scalatest.funsuite.AnyFunSuite
    SaladIngredientConstant

  check [A] (obtained : A) (expected : A) : org.scalatest.compatible.Assertion =
    assert (obtained == expected)

  add_next_ingredient (salad_so_far : Seq [SaladIngredient] ) (ingredient : SaladIngredient) : Seq [SaladIngredient] =
    salad_so_far .+: (ingredient)

  has_salad_at_most_2_ingredients (salad_so_far : Seq [SaladIngredient] ) (next_ingredient : SaladIngredient) : Boolean =
    salad_so_far .length < 3

  _salad_maker = SaladMaker_ ()

  test ("salad maker") (
    check (
      obtained := _salad_maker .apply (
        list_of_ingredients := SaladIngredient_values) (
        initial_bowl := Seq [SaladIngredient] () ) (
        next_ingredient_function := add_next_ingredient) (
        condition_to_continue := has_salad_at_most_2_ingredients
      )
    ) (
      expected := Seq (sunflower_seeds , lettuce , tomato)
    )
  )

end

