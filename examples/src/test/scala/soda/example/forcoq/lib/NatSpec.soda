package soda.example.forcoq.lib

class NatSpec ()
  extends
    org.scalatest.funsuite.AnyFunSuite

  test ("IntNat from non negative")
    let
      instance = IntNat_ ()
      expected = S_ (S_ (S_ (S_ (S_ (S_ (S_ (S_ (O_ ( ) ) ) ) ) ) ) ) )
      obtained =
        instance.from_non_negative (8)
    in assert (obtained == expected)

  test ("IntNat to Int")
    let
      instance = IntNat_ ()
      expected = 5
      obtained =
        instance.to_Int (
          S_ (S_ (S_ (S_ (S_ (O_ ( ) ) ) ) ) )
        )
    in assert (obtained == expected)

  test ("Nat add")
    let
      a = S_ (S_ (S_ (O_ ( ) ) ) )
      b = S_ (S_ (S_ (S_ (S_ (O_ ( ) ) ) ) ) )
      expected = S_ (S_ (S_ (S_ (S_ (S_ (S_ (S_ (O_ ( ) ) ) ) ) ) ) ) )
      obtained = a.add (b)
    in assert (obtained == expected)

  test ("Nat mul")
    let
      a = S_ (S_ (S_ (O_ ( ) ) ) )
      b = S_ (S_ (S_ (S_ (O_ ( ) ) ) ) )
      expected = S_ (S_ (S_ (S_ (S_ (S_ (S_ (S_ (S_ (S_ (S_ (S_ (O_ ( ) ) ) ) ) ) ) ) ) ) ) ) )
      obtained = a.mul (b)
    in assert (obtained == expected)

end

