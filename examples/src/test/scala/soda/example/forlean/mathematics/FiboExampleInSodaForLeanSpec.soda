
class FiboExampleInSodaForLeanSpec ()
  extends
    org.scalatest.funsuite.AnyFunSuite

  import
    soda.example.forlean.lib.IntNat_
    soda.example.forlean.lib.Nat

  check [A : Type] (obtained : A) (expected : A) : org.scalatest.compatible.Assertion =
    assert (obtained == expected)

  fibonacci_values : Seq [Tuple2 [Int] [Int] ] = Seq (
    (0 , 0) , (1 , 1) , (2 , 1) , (3 , 2) , (4 , 3) , (5 , 5) , (6 , 8) , (7 , 13) , (8 , 21) , (9 , 34) , (10 , 55)
  )

  fibonacci_values_with_nat : Seq [Tuple2 [Nat] [Nat] ] =
    fibonacci_values
      .map (lambda pair -->
        Tuple2 (IntNat_ () .from_non_negative (pair ._1), IntNat_ () .from_non_negative (pair ._2) )
      )

  test ("should test the fibonacci function for Lean") (
    check (
      obtained := fibonacci_values_with_nat
        .map (lambda pair --> pair ._1)
        .map (lambda n --> Tuple2 (n , FiboExampleInSodaForLean_ () .fib (n) ) )
    ) (
      expected := fibonacci_values_with_nat
    )
  )

end

