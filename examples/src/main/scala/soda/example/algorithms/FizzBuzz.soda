
class FizzBuzz

  abstract

  fizz = "Fizz"

  buzz = "Buzz"

  range = soda.lib.Range .mk

  is_div (n : Int) (k : Int) : Boolean =
    n % k == 0

  get_term (n : Int) : String =
    if is_div (n) (15) then fizz + buzz
    else if is_div (n) (3) then fizz
    else if is_div (n) (5) then buzz
    else n .toString

  apply : Seq [String] =
    range .apply (100)
      .map (lambda x --> x + 1)
      .map (get_term)

end
