package soda.example.algorithms

class FizzBuzzPatternMatching

  import
    soda.lib.Range_

  fizz = "Fizz"

  buzz = "Buzz"

  _range = Range_ ()

  fizz_buzz =
    _range.apply (100)
      .map ( lambda (x : Int) --> x + 1)
      .map (get_fizz_buzz_term)

  get_fizz_buzz_term (n : Int) =
    match Tuple2 (n % 3, n % 5)
      case Tuple2 (0, 0) ==> fizz + buzz
      case Tuple2 (0, x) ==> fizz
      case Tuple2 (x, 0) ==> buzz
      case x ==> n.toString

end
