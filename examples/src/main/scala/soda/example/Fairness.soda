package soda.translator.example


class Applicant is {

  has background_score: Double
}

class Fairness is {

  has rank: Applicant -> Double

  has score_difference_tolerance: Double

  has ranking_difference_tolerance: Double

  has measure_time: Any -> Double

  has maximum_execution_time: Double

  is_fair (alice: Applicant, bob: Applicant) is
    if have_similar_score (alice.background_score, bob.background_score)
    then have_similar_ranking (rank (alice), rank (bob))
    else true

  have_similar_score (score1: Double, score2: Double) is
    difference_between (score1, score2) < score_difference_tolerance

  have_similar_ranking (result1: Double, result2: Double) is
    difference_between (result1, result2) < ranking_difference_tolerance

  difference_between (value: Double, another_value: Double) is
    Math.abs(value - another_value)

  is_response_time_acceptable (applicant: Applicant) is
    if measure_time (rank (applicant)) < maximum_execution_time
    then true
    else false
}

