
class PairExample

  abstract
    left : nat
    right : nat

end

class SwapExample

  directive coq
  Definition left (pair : PairExample) : nat := pair .(left) .

  directive coq
  Definition right (pair : PairExample) : nat := pair .(right) .

  directive scala
  def left (pair : PairExample) : nat = pair .left

  directive scala
  def right (pair : PairExample) : nat = pair .right

  swap (pair : PairExample) : PairExample =
    PairExample_ (right (pair) ) (left (pair) )

  directive coq
  Theorem
    swap_of_swap : forall (x : nat) (y : nat) , (swap (swap (PairExample_ (x) (y) ) ) ) =
    PairExample_ (x) (y) .
  Proof.
    auto.
  Qed.

end

