
class PairExample

  abstract
    left : nat
    right : nat

end

class SwapExample

  left (pair : PairExample) : nat =
    match pair
      case (PairExample_ (x , y) ) ==> x

  right (pair : PairExample) : nat =
    match pair
      case (PairExample_ (x , y) ) ==> y

  swap (pair : PairExample) : PairExample =
    PairExample_ (right (pair) , left (pair) )

  directive coq
  Theorem
    swap_of_swap : forall (pair : PairExample) , (swap (swap (pair) ) ) = pair .
  Proof.
    intros p.
    destruct p.
    compute.
    destruct x.
    apply eq_refl.
  Qed.

end

