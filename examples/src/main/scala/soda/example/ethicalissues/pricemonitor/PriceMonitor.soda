
class Customer

  abstract
    name : String
    ip_address : String

end

class Flight

  abstract
    start_airport : String
    intermediate_airports : Seq [String]
    end_airport : String

end

class PricingAgent

  import
    java.util.Date

  abstract
    /** get_price (customer : Customer) (flight : Flight) (date_in_days : Int) : Int */
    abs_get_price : Customer -> Flight -> Int -> Int

  get_price (customer : Customer) (flight : Flight) (date_in_days : Int) : Int =
    abs_get_price (customer) (flight) (date_in_days)

  milliseconds_per_day : Long = 24 * 60 * 60 * 1000

  get_days_for (date : Date) : Int =
    (date .getTime / milliseconds_per_day) .toInt

end

class RequirementMonitor

  abstract
    pricing_agent : PricingAgent

  get_price (customer : Customer) (flight : Flight) (date_in_days : Int) : Int =
    pricing_agent .get_price (customer) (flight) (date_in_days)

end

