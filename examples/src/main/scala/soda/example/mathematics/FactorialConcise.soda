package soda.example.mathematics

class AbstractFactorialConcise

  abstract
    get_factorial (n: Int): Int

end

class FactorialConcise
  extends
    AbstractFactorialConcise

  @tailrec
  _tailrec_get_factorial (n: Int, product: Int): Int =
    if n == 0
    then product
    else _tailrec_get_factorial (n - 1, n * product)

  get_factorial (n: Int): Int =
    _tailrec_get_factorial (n, 1)

end

class FactorialConcise_ ()
  extends FactorialConcise

end

