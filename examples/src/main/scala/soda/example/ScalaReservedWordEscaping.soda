package soda.example


* ScalaReservedWordEscaping = {

  var = "var"

  val = 1

  def[A, B](key: A, value: B): Pair[A, B] = Pair_(key, value)

  while[A, B](seq: Seq[A], cond: A -> Boolean, do : A -> B): Seq[B] =
    seq.takeWhile(cond).map(do)

  protected = "protected"

  private = "private"

  f(x: Int, y: Int): Int = x + y

  cons: (Int, Int) -> Int = (x, y) -> f(x, y)
}

* Pair[A, B] = {

  has key: A

  has value: B
}

* Pair_[A, B](key: A, value: B) extends Pair[A, B]

