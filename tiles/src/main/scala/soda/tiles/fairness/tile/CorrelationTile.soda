
class CorrelationTile

  _measure_zero = Measure_ (0)

  _percentage_constant : Double = 100.0

  get_coefficient (xlist : Seq [Double] ) (ylist : Seq [Double] ) : Double =
    Pearson_ (xlist) (ylist) .coefficient

  to_double (m : Measure) : Double =
    if (m == _measure_zero)
    then 0.0
    else 1.0

  to_measure (d : Double) : Measure =
    Measure_ ( (d * _percentage_constant) .intValue)

  get_fst_list (lists : Seq [TilePair [Measure] [Measure] ] ) : Seq [Double] =
    lists .map (lambda pair --> to_double (pair .fst) )

  get_snd_list (lists : Seq [TilePair [Measure] [Measure] ] ) : Seq [Double] =
    lists .map (lambda pair --> to_double (pair .snd) )

  process_tuples (lists : Seq [TilePair [Measure] [Measure] ] ) : Measure =
    to_measure (get_coefficient (get_fst_list (lists) ) (get_snd_list (lists) ) )

  apply (message : TileMessage [Seq [TilePair [Measure] [Measure] ] ] )
    : TileMessage [Measure] =
    TileMessageBuilder_ () .build (message .context) (message .outcome) (
      process_tuples (message .contents)
    )

end

