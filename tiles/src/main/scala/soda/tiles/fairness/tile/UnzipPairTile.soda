
class UnzipPairFstTile

  abstract

  unzip_fst_list [A : Type] [B : Type] (list : Seq [TilePair [A] [B] ] ) : Seq [A] =
    list .map (lambda pair --> pair .fst)

  apply [A : Type] [B : Type] (message : TileMessage [Seq [TilePair [A] [B] ] ] )
      : TileMessage [Seq [A] ] =
    TileMessageBuilder .mk .build (message .context) (message .outcome) (
      unzip_fst_list (message .contents)
    )

end


class UnzipPairSndTile

  abstract

  unzip_snd_list [A : Type] [B : Type] (list : Seq [TilePair [A] [B] ] ) : Seq [B] =
    list .map (lambda pair --> pair .snd)

  apply [A : Type] [B : Type] (message : TileMessage [Seq [TilePair [A] [B] ] ] )
      : TileMessage [Seq [B] ] =
    TileMessageBuilder .mk .build (message .context) (message .outcome) (
      unzip_snd_list (message .contents)
    )

end

