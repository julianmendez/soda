
class Actor
  extends
    Comparable [Actor]

  abstract
    id : String

  compareTo (other : Actor) : Int =
    id .compareTo (other .id)

  @override
  toString : String =
    id

end


class Resource
  extends
    Comparable [Resource]

  abstract
    id : String

  compareTo (other : Resource) : Int =
    id .compareTo (other .id)

  @override
  toString : String =
    id

end


class Measure
  extends
    Comparable [Measure]

  abstract
    value : Int

  minus_infinity = Int .MinValue

  plus_infinity = Int .MaxValue

  compareTo (other : Measure) : Int =
    value .compareTo (other .value)

  @override
  toString : String =
    value .toString

end


class Assignment
  extends
    Comparable [Assignment]

  abstract
    actor : Actor
    resource : Resource

  compareTo (other : Assignment) : Int =
    if actor == other .actor
    then resource .compareTo (other .resource)
    else actor .compareTo (other .actor)

  @override
  toString : String =
    "\u27E8" + actor + ", " + resource + "\u27E9"

end


class Outcome

  abstract
    assignments : Seq [Assignment]

  @override
  toString : String =
    assignments .mkString (",")

end


class Context

end

